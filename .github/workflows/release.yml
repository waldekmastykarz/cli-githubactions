name: Release

on:
  push:
    branches:
      - "!*"
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: node_modules-ubuntu-latest-14-${{ hashFiles('**/npm-shrinkwrap.json') }}
      - name: Restore dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            .
            !.git
            !node_modules
  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: node_modules-ubuntu-latest-14-${{ hashFiles('**/npm-shrinkwrap.json') }}
      - name: Restore dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test
        run: npm test
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: coverage
          path: coverage
  publish:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: node_modules-ubuntu-latest-14-${{ hashFiles('**/npm-shrinkwrap.json') }}
      - name: Restore dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Publish @next
        run: echo "npm publish --access public"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  deploy_docker:
    needs: publish
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract version from package
        id: package_version
        run: |
          echo "::set-output name=version::$(node -p "require('./package.json').version")"
      - name: Build and push ${{ steps.package_version.outputs.version }}
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: m365pnp/cli-microsoft365:${{ steps.package_version.outputs.version }}
          build-args: |
            CLI_VERSION=${{ steps.package_version.outputs.version }}
      - name: Build and push latest
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: m365pnp/cli-microsoft365:latest
          build-args: |
            CLI_VERSION=${{ steps.package_version.outputs.version }}